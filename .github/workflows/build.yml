name: CI

on:
  pull_request:
  push:
    branches:
      - "main"

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version:
          - "8.1"
          - "8.2"
          - "8.3"
        composer-deps:
          - "lowest"
          - "highest"
    steps:
      - uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none
          tools: composer:v2

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: "Cache dependencies"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-composer-${{ matrix.composer-deps }}-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-${{ matrix.composer-deps }}"

      - name: "Install dependencies"
        run: "composer install --no-interaction --no-progress --ignore-platform-reqs"

      - name: "Update dependencies (lowest)"
        run: "composer update --no-interaction --no-progress --prefer-lowest --prefer-stable"
        if: ${{ matrix.composer-deps == 'lowest' }}

      - name: "Update dependencies (latest)"
        run: "composer update --no-interaction --no-progress --no-suggest"
        if: ${{ matrix.composer-deps == 'latest' }}

      - name: "Show dependencies"
        run: "composer show"

      - name: Run CI
        run: "composer run-script ci"


  tests-with-coverage:
    name: "Tests with coverage and PR Comments"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version:
          - "8.1"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "xdebug"
          php-version: "${{ matrix.php-version }}"
          ini-values: zend.assertions=1
          tools: composer:v2

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: "Cache dependencies"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: "Install dependencies"
        run: "composer install --no-interaction --no-progress --no-suggest --ignore-platform-reqs"

      - name: "Update dependencies (latest)"
        run: "composer update --no-interaction --no-progress --no-suggest"

      - name: "Show dependencies"
        run: "composer show"

      - name: "Run CI with coverage"
        run: "composer run-script ci-coverage"

      - name: Run PHPStan
        run: composer run-script stan -- --error-format=github
